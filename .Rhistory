library(ggplot2)
library(lme4)
library(lmerTest)
install.library('lmerTest')
install.package('lmerTest')
install.packages('lmerTest')
install.packages('lmerTest')library(lmerTest)
library(lmerTest)
log_dir <- "../../misc/working_memory_logs"
fig_dir <- "../../scratch/working_memory/results/figures"
bnames <- c('maintenance','manipulation')
lnames <- c('recognize','invert')
subjects <- 11:90
scount <- 0
d <- c()
for (sub in subjects){
  scount <- scount + 1
  for (b in 1:length(lnames)){
    ln <- lnames[b]
    dfile <- sprintf('%s/%04.f_%s_MEG.csv',log_dir,sub,ln)
    print(dfile)
    d0 <- read.table(dfile,sep=',',header=T)
    d0$block <- bnames[b]
    if (scount == 1 & b == 1){
      d <- d0
    }else{
      d <- rbind(d,d0)
    }
  }
}
pwd
cwd
wd
cd
getwd()
setwd('/projects/MINDLAB2020_MEG-AuditoryPatternRecognition/scripts/working_memory/')
setwd('/projects/MINDLAB2020_MEG-AuditoryPatternRecognition/scripts/working_memory/')log_dir <- "../../misc/working_memory_logs"
fig_dir <- "../../scratch/working_memory/results/figures"
bnames <- c('maintenance','manipulation')
lnames <- c('recognize','invert')
```
```{r}
## Load data:
subjects <- 11:90
scount <- 0
d <- c()
for (sub in subjects){
  scount <- scount + 1
  for (b in 1:length(lnames)){
    ln <- lnames[b]
    dfile <- sprintf('%s/%04.f_%s_MEG.csv',log_dir,sub,ln)
    print(dfile)
    d0 <- read.table(dfile,sep=',',header=T)
    d0$block <- bnames[b]
    if (scount == 1 & b == 1){
      d <- d0
    }else{
      d <- rbind(d,d0)
    }
  }
}
```
d
d
unique(d$subject)
print(unique(d$subject))
d
subjects <- 11:90
scount <- 0
d <- c()
for (sub in subjects){
  scount <- scount + 1
  for (b in 1:length(lnames)){
    ln <- lnames[b]
    dfile <- sprintf('%s/%04.f_%s_MEG.csv',log_dir,sub,ln)
    print(dfile)
    d0 <- read.table(dfile,sep=',',header=T)
    print(d0)
    d0$block <- bnames[b]
    if (scount == 1 & b == 1){
      d <- d0
    }else{
      d <- rbind(d,d0)
    }
  }
}
d$subject
subjects <- 11:90
scount <- 0
d <- c()
for (sub in subjects){
  scount <- scount + 1
  for (b in 1:length(lnames)){
    ln <- lnames[b]
    dfile <- sprintf('%s/%04.f_%s_MEG.csv',log_dir,sub,ln)
    print(dfile)
    d0 <- read.table(dfile,sep=',',header=T)
    d0$subject = as.factor(as.character(d0$subject))
    d0$block <- bnames[b]
    if (scount == 1 & b == 1){
      d <- d0
    }else{
      d <- rbind(d,d0)
    }
  }
}
d
unique(d$subject)
d$accuracy <- as.numeric(d$type == d$response)
d2 <- aggregate(d$accuracy, by=list(d$subject,d$block), mean)
colnames(d2) <- c('subject','block','accuracy')
d2
ap <- ggplot(data=d2, aes(block,accuracy, fill = block)) +
  geom_point(alpha=.1) +
  geom_line(alpha = .1, aes(group=subject)) +
  geom_violin(alpha = .1) +
  scale_fill_manual(values=c('blue','red'))+
  theme_bw()
ggsave(paste0(fig_dir,'/behavioral_accuracy.pdf'), ap, dpi= 300, width=15, height=10,units='cm')
m0 <- glmer(accuracy~block + (1+block|subject), data = d, family = 'binomial')
summary(m0)
exc <- unique(d2[d2$accuracy <= 0.5,'subject'])
print(exc)
quit()
